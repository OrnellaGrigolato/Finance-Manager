// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

//datasource db {
//  provider = "mysql"
//  url      = env("DATABASE_URL")
//  relationMode = "prisma"
//}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id              Int       @id @default(autoincrement())
  username        String    @unique @db.VarChar(55)
  email           String    @unique @db.VarChar(100)
  emailVerified   Boolean   @default(false)
  isBlocked       Boolean   @default(false)
  maxExpenditure  Int       @default(100000)
  password        String    @db.VarChar(255)
  login_date      DateTime? @default(now()) @db.Timestamp()
  available_money Decimal   @default(0) @db.Decimal(10, 2)
  lastmove_amount Decimal?  @default(0) @db.Decimal(10, 2)
  lastmove_date   DateTime? @db.Timestamp()
  moves           Moves[]
}

model Moves {
  id_moves        Int             @id @unique @default(autoincrement())
  description     String          @db.Text()
  income_amount   Decimal         @default(0) @db.Decimal(10, 2)
  discount_amount Decimal         @default(0) @db.Decimal(10, 2)
  movement_date   DateTime        @default(now()) @db.Timestamp()
  user            Users           @relation(fields: [user_id], references: [id])
  user_id         Int
  title           String          @db.VarChar(35)
  currency        Currency        @relation(fields: [currency_id], references: [id_currency])
  currency_id     Int
  DorO            DestinyOrOrigin @relation(fields: [DorO_id], references: [id_DorO])
  DorO_id         Int             @default(0)

  @@index([user_id])
  @@index([currency_id])
  @@index([DorO_id])
}

model Currency {
  id_currency Int     @id @unique @default(autoincrement())
  name        String  @unique @default("ARS") @db.VarChar(35)
  moves       Moves[]
}

model DestinyOrOrigin {
  id_DorO Int     @id @unique @default(autoincrement())
  name    String  @unique
  moves   Moves[]
}
